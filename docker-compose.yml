version: '3.7'

services:

  php-fpm:
    build: docker
    container_name: 'php'
    ports:
      - '9000:9000'
    volumes:
      - ./:/app
    working_dir: /app

  nginx:
    image: nginx
    container_name: 'nginx'
    working_dir: /app
    ports:
      - '7777:80'
    volumes:
      - ./:/app
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf

  postgres:
    image: postgres:15
    ports:
      - 15432:5432
    container_name: 'postgresql'
    working_dir: /app
    restart: always
    environment:
      POSTGRES_DB: 'twitter'
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
    volumes:
      - dump:/app/dump
      - postgresql:/var/lib/postgresql/data

  postgres_test:
    image: postgres:11
    ports:
      - 25432:5432
    container_name: 'postgresql_test'
    working_dir: /app
    restart: always
    environment:
      POSTGRES_DB: 'twitter_test'
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
    volumes:
      - dump:/app/dump
      - postgresql_test:/var/lib/postgresql/data

  graphite:
    image: graphiteapp/graphite-statsd
    container_name: 'graphite'
    restart: always
    ports:
      - 8000:80
      - 2003:2003
      - 2004:2004
      - 2023:2023
      - 2024:2024
      - 8125:8125/udp
      - 8126:8126

  grafana:
    image: grafana/grafana
    container_name: 'grafana'
    restart: always
    ports:
      - 3000:3000

  memcached:
    image: memcached:latest
    container_name: 'memcached'
    restart: always
    ports:
      - 11211:11211


  redis:
    container_name: 'redis'
    image: redis:alpine
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.7.5-management
    working_dir: /app
    hostname: rabbit-mq
    container_name: 'rabbit-mq'
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  supervisor:
    build: docker/supervisor
    container_name: 'supervisor'
    volumes:
      - ./:/app
      - ./docker/supervisor/supervisord.conf:/etc/supervisor/supervisord.conf
    working_dir: /app
    command: ["supervisord", "-c", "/etc/supervisor/supervisord.conf"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    container_name: 'elasticsearch'
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2
    container_name: 'kibana'
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

  openapi-generator:
    image: openapitools/openapi-generator-cli:latest
    volumes:
      - ./:/local
    command: [ "generate", "-i", "/local/apidoc.yaml", "-g", "php-dt", "-o", "/local/api-client" ]

volumes:
  dump:
  postgresql:
  postgresql_test:
